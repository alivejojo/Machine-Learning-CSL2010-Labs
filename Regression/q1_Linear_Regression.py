# -*- coding: utf-8 -*-
"""Q1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lKjGGA_jGhN2SADKGy5CIct613XGGfcS
"""

import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

from google.colab import files
uploaded = files.upload()

df = pd.read_csv("linear_regression_dataset.csv")

X = df[["Height "]]
y = df[["Weight"]]
plt.scatter(X,y,c = "blue", marker = ".")
plt.xlabel("Height")
plt.ylabel("Weight")
plt.show()

from sklearn.linear_model import LinearRegression

model = LinearRegression()
model.fit(X,y)
print(model.score(X,y))

plt.scatter(X,y,c = "blue", marker = ".")
plt.xlabel("Height")
plt.ylabel("Weight")
plt.plot(X, model.predict(X))
plt.show()

print(model.coef_[0])
print(model.intercept_[0])

# Linear REgression from scratch 

# from least square solution we know that the parameters

X = X.to_numpy()
y = y.to_numpy()

# add column of 1's to X for the bias units
x = np.ones(15)

X = np.insert(X, 0,x,axis =1)
X

m = np.matmul(np.transpose(X),X)
n = np.matmul(np.transpose(X), y)

print(m.shape)
print(n.shape)

o = np.matmul( np.linalg.pinv(m),n)

o

plt.scatter(df[["Height "]], df[["Weight"]],c = "blue", marker = ".")
plt.xlabel("Height")
plt.ylabel("Weight")
y_pred = np.matmul( X,o)
plt.plot(df[["Height "]], y_pred)
plt.show()
