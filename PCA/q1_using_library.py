# -*- coding: utf-8 -*-
"""B20BB047_Task1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qdusCYVSXMje_K-M_Kj0VV_1UPNxbRdV
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

from sklearn.datasets import load_digits
mnist = load_digits()

df=pd.DataFrame(mnist.data)

df.describe()

'''

*   1797 samples of 8x8 pixel hndwritten digits
*   64 features are the colour intensities of pixels
*   mnist is  a sklearn utils bunch which contain the data, target, target_names, images, DESCR
'''

mnist.keys()

# q1.3
# we cannot reshape this data into (28x28) as its shape is (1797, 64)
# had the shape been (:,784) we could have re-shaped it to (28x28)
# the sklearn mnist is not the original mnist but a smaller dataset with fewer pixel images


plt.imshow(df.iloc[0,:].to_numpy().reshape(8,8))

X = df.to_numpy()
# numpy allows easier reshaping

from sklearn.preprocessing import StandardScaler
scaler=StandardScaler()

X_scaled=scaler.fit_transform(X)

# q1.4.i)
from sklearn.decomposition import PCA
pca = PCA(n_components=5)
pcsofX = pca.fit_transform(X_scaled)

pca.explained_variance_ratio_
# output: 
# array([0.12033916, 0.09561054, 0.08444415, 0.06498408, 0.04860142])

# q1.4.i)
pca2 = PCA(.95)
pcsofX2 = pca2.fit_transform(X_scaled)

pca2.n_components_ 
# prints 40 compenents needed for 95% of vaiance 
