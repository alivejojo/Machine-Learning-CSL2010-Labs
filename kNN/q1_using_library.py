# -*- coding: utf-8 -*-
"""lab4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PEjPxBsN3OwJ2eRXFpCGvN1fvrZpynzn
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

from google.colab import files
uploaded = files.upload()

df = pd.read_csv("diabetes (1).csv")
df.head()

# just for plotting

x_Axis = np.arange(768)
y_axis = df[['Outcome']].to_numpy()
plt.scatter(df[['Glucose']].to_numpy(), y_axis)
plt.show()

def check_zeros(clm):

  s=0
  for i in range(len(clm)):
    if clm[i] == [0]: 
      s = s + 1
  return s

print("number of zeros in : ")
for i in list(df.columns):
  
  print(i, " -> ", check_zeros(   df[[i]].to_numpy()  ))

# zeros in Pregnancies and Outcomes makes sense. 
# 0's in Glucose, BloodPressure, SkinThickness, BMI don't make sense
# we impute them by mean values of the respective features

def impute_by_mean (clm):

  for i in range(df[clm].values.shape[0]):
    if df[clm].values[i] == 0:
      df[clm].values[i] = df[clm].mean()

impute_by_mean('Glucose')
impute_by_mean('BloodPressure')
impute_by_mean('SkinThickness')
impute_by_mean('BMI')

print("number of zeros in : ")
for i in list(df.columns):
  
  print(i, " -> ", check_zeros(   df[[i]].to_numpy()  ))

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
features_scaled = scaler.fit_transform (df.drop('Outcome',axis=1))

df_scaled = pd.DataFrame(features_scaled, columns = df.columns[:-1])
df_scaled.head()

# Split the dataset into 70:30
from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(df_scaled, df[['Outcome']], test_size=0.3)

from sklearn.neighbors import KNeighborsClassifier
knn = KNeighborsClassifier(n_neighbors=5)
knn.fit(X_train.to_numpy(),y_train.to_numpy().ravel())

from sklearn.metrics import classification_report,confusion_matrix

pred_test = knn.predict(X_test)
print(confusion_matrix(y_test,pred_test))

print(classification_report(y_test,pred_test))
